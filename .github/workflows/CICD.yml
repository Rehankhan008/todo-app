name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend:${{github.run_id}}


      - name: Build and Push action
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{github.run_id}}


  #    - name: Update Backend Deployment File
  #      run: |
  #        $newTagBackend = '${{ secrets.DOCKERHUB_USERNAME }}/backend:${{ github.run_id }}'
  #        (Get-Content k8s/backend-deploy.yml) -replace 'image: .*', "image: $newTagBackend" | Set-Content k8s/backend-deploy.yml


   #   - name: Update Frontend Deployment File
   #     run: |
   #       $newTagFrontend = '${{ secrets.DOCKERHUB_USERNAME }}/frontend:${{ github.run_id }}'
   #       (Get-Content k8s/frontend-deploy.yml) -replace 'image: .*', "image: $newTagFrontend" | Set-Content k8s/frontend-deploy.yml
      - name: Create Grafana Secret
        run: |
            kubectl create secret generic grafana-secret --from-literal=admin-password=${{ secrets.PASS }} -n monitoring

      - name: Deploy on Kubernetes
        run: |
          kubectl apply -f k8s/backend-deploy.yml
          kubectl apply -f k8s/backend-svc.yml
          kubectl apply -f k8s/frontend-deploy.yml
          kubectl apply -f k8s/frontend-svc.yml
          kubectl apply -f k8s/mongo-deploy.yml 
          kubectl apply -f k8s/mongo-svc.yml
          kubectl apply -f k8s/secrets.yml
          kubectl apply -f ingress.yml
          kubectl apply -f monitoring/grafana-deployment.yaml
          kubectl apply -f monitoring/prometheus-config.yaml
          kubectl apply -f k8s/rbac-role.yml
          kubectl apply -f monitoring/prometheus-deployment.yaml
          kubectl apply -f k8s/rbac-rolebinding.yml
          
          
